<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="CyberRT__Terms_8md" kind="file">
    <compoundname>CyberRT_Terms.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#<sp/>Apollo<sp/>Cyber<sp/>RT<sp/>Terminologies<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">This<sp/>page<sp/>describes<sp/>the<sp/>definitions<sp/>of<sp/>the<sp/>most<sp/>commonly<sp/>used<sp/>terminologies<sp/>in<sp/>Cyber<sp/>RT.</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">##<sp/>Component</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">In<sp/>an<sp/>autonomous<sp/>driving<sp/>system,<sp/>modules(like<sp/>perception,<sp/>localization,<sp/>control<sp/>systems...)<sp/>exist<sp/>in<sp/>the<sp/>form<sp/>of<sp/>components<sp/>under<sp/>Cyber<sp/>RT.<sp/>Each<sp/>component<sp/>communicates<sp/>with<sp/>the<sp/>others<sp/>through<sp/>Cyber<sp/>channels.<sp/>The<sp/>component<sp/>concept<sp/>not<sp/>only<sp/>decouples<sp/>modules<sp/>but<sp/>also<sp/>provides<sp/>the<sp/>flexibility<sp/>for<sp/>modules<sp/>to<sp/>be<sp/>divided<sp/>into<sp/>components<sp/>based<sp/>individual<sp/>module<sp/>design.</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Channel</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">Channels<sp/>are<sp/>used<sp/>to<sp/>manage<sp/>data<sp/>communication<sp/>in<sp/>Cyber<sp/>RT.<sp/>Users<sp/>can<sp/>publish/subscribe<sp/>to<sp/>the<sp/>same<sp/>channel<sp/>to<sp/>achieve<sp/>p2p<sp/>communication.</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">##<sp/>Task</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">Task<sp/>is<sp/>the<sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/>description<sp/>of<sp/>an<sp/>asynchronous<sp/>computation<sp/>task<sp/>in<sp/>Cyber<sp/>RT.</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">##<sp/>Node<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">Node<sp/>is<sp/>the<sp/>fundamental<sp/>building<sp/>block<sp/>of<sp/>Cyber<sp/>RT;<sp/>every<sp/>module<sp/>contains<sp/>and<sp/>communicates<sp/>through<sp/>the<sp/>node.<sp/>A<sp/>module<sp/>can<sp/>have<sp/>different<sp/>types<sp/>of<sp/>communication<sp/>by<sp/>defining<sp/>read/write<sp/>and/or<sp/>service/client<sp/>in<sp/>a<sp/>node.<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Reader/Writer<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">Message<sp/>read/write<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">from/to<sp/>channel.<sp/>Reader/Writer<sp/>are<sp/>normally<sp/>created<sp/>within<sp/>a<sp/>node<sp/>as<sp/>the<sp/>major<sp/>message<sp/>transfer<sp/>interface<sp/>in<sp/>Cyber<sp/>RT.</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">##<sp/>Service/Client</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">Besides<sp/>Reader/writer,<sp/>Cyber<sp/>RT<sp/>also<sp/>provides<sp/>service/client<sp/>pattern<sp/>for<sp/>module<sp/>communication.<sp/>It<sp/>supports<sp/>two-way<sp/>communication<sp/>between<sp/>nodes.<sp/>A<sp/>client<sp/>node<sp/>will<sp/>receive<sp/>a<sp/>response<sp/>when<sp/>a<sp/>request<sp/>is<sp/>made<sp/>to<sp/>a<sp/>service.</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">##<sp/>Parameter</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">Parameter<sp/>service<sp/>provides<sp/>a<sp/>global<sp/>parameter<sp/>access<sp/>interface<sp/>in<sp/>Cyber<sp/>RT.<sp/>It&apos;s<sp/>built<sp/>based<sp/>on<sp/>the<sp/>service/client<sp/>pattern.</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">##<sp/>Service<sp/>discovery</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">As<sp/>a<sp/>decentralized<sp/>design<sp/>framework,<sp/>Cyber<sp/>RT<sp/>does<sp/>not<sp/>have<sp/>a<sp/>master/central<sp/>node<sp/>for<sp/>service<sp/>registration.<sp/>All<sp/>nodes<sp/>are<sp/>treated<sp/>equally<sp/>and<sp/>can<sp/>find<sp/>other<sp/>service<sp/>nodes<sp/>through<sp/>`service<sp/>discovery`.<sp/>`UDP`<sp/>is<sp/>used<sp/>in<sp/>Service<sp/>discovery.</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">##<sp/>CRoutine</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">Referred<sp/>to<sp/>as<sp/>Coroutine<sp/>concept,<sp/>Cyber<sp/>RT<sp/>implemented<sp/>CRoutine<sp/>to<sp/>optimize<sp/>thread<sp/>usage<sp/>and<sp/>system<sp/>reource<sp/>allocation.</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">##<sp/>Scheduler</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">To<sp/>better<sp/>support<sp/>autonomous<sp/>driving<sp/>scenarios,<sp/>Cyber<sp/>RT<sp/>provides<sp/>different<sp/>kinds<sp/>of<sp/>resource<sp/>scheduling<sp/>algorithms<sp/>for<sp/>developers<sp/>to<sp/>choose<sp/>from.</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">##<sp/>Message</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">Message<sp/>is<sp/>the<sp/>data<sp/>unit<sp/>used<sp/>in<sp/>Cyber<sp/>RT<sp/>for<sp/>data<sp/>transfer<sp/>between<sp/>modules.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">##<sp/>Dag<sp/>file</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Dag<sp/>file<sp/>is<sp/>the<sp/>config<sp/>file<sp/>of<sp/>module<sp/>topology.<sp/>You<sp/>can<sp/>define<sp/>components<sp/>used<sp/>and<sp/>upstream/downstream<sp/>channels<sp/>in<sp/>the<sp/>dag<sp/>file.</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">##<sp/>Launch<sp/>files</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">The<sp/>Launch<sp/>file<sp/>provides<sp/>a<sp/>easy<sp/>way<sp/>to<sp/>start<sp/>modules.<sp/>By<sp/>defining<sp/>one<sp/>or<sp/>multiple<sp/>dag<sp/>files<sp/>in<sp/>the<sp/>launch<sp/>file,<sp/>you<sp/>can<sp/>start<sp/>multiple<sp/>modules<sp/>at<sp/>the<sp/>same<sp/>time.</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">##<sp/>Record<sp/>file</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">The<sp/>Record<sp/>file<sp/>is<sp/>used<sp/>to<sp/>record<sp/>messages<sp/>sent/received<sp/>to/from<sp/>channels<sp/>in<sp/>Cyber<sp/>RT.<sp/>Reply<sp/>record<sp/>files<sp/>can<sp/>help<sp/>reproduce<sp/>the<sp/>behavior<sp/>of<sp/>previous<sp/>operations<sp/>of<sp/>Cyber<sp/>RT.</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/docs/CyberRT_Terms.md"/>
  </compounddef>
</doxygen>
